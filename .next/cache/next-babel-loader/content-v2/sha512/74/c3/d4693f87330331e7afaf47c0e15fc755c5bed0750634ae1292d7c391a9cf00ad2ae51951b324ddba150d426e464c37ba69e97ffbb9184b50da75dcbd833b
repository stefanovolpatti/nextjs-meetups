{"ast":null,"code":"import _regeneratorRuntime from \"/Users/stefanovolpatti/Web Development/react-complete-guide/22-NextJS/nextjs-project/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/stefanovolpatti/Web Development/react-complete-guide/22-NextJS/nextjs-project/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { MongoClient } from 'mongodb';\n\nfunction handler(_x, _x2) {\n  return _handler.apply(this, arguments);\n}\n\nfunction _handler() {\n  _handler = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(req, res) {\n    var data, client, db, meetupsCollection, result;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!(req.method === 'POST')) {\n              _context.next = 13;\n              break;\n            }\n\n            data = req.body; // Chiamo Mongodb\n\n            _context.next = 4;\n            return MongoClient.connect('mongodb+srv://stefano:Rietto2019@cluster0.qf1ny.mongodb.net/meetups?retryWrites=true&w=majority');\n\n          case 4:\n            client = _context.sent;\n            // Entro in possesso del database\n            db = client.db(); // Accedo alle mie collections\n\n            meetupsCollection = db.collection('meetups'); // Inserisco un nuovo documento alla collezione\n\n            _context.next = 9;\n            return meetupsCollection.insertOne(data);\n\n          case 9:\n            result = _context.sent;\n            console.log(result); // Chiudo la connessione una volta finita e ritorno la risposta\n\n            client.close(); // Metodo status che posso chiamare alla risposta per settare lo stato HTTP della risposta che ritornerò\n\n            res.status(201).json({\n              message: 'Meetup inserted!'\n            });\n\n          case 13:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _handler.apply(this, arguments);\n}\n\nexport default handler;","map":{"version":3,"sources":["/Users/stefanovolpatti/Web Development/react-complete-guide/22-NextJS/nextjs-project/pages/api/new-meetup.js"],"names":["MongoClient","handler","req","res","method","data","body","connect","client","db","meetupsCollection","collection","insertOne","result","console","log","close","status","json","message"],"mappings":";;AAAA,SAAQA,WAAR,QAA0B,SAA1B;;SAEeC,O;;;;;sEAAf,iBAAuBC,GAAvB,EAA4BC,GAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACKD,GAAG,CAACE,MAAJ,KAAe,MADpB;AAAA;AAAA;AAAA;;AAEQC,YAAAA,IAFR,GAEeH,GAAG,CAACI,IAFnB,EAIE;;AAJF;AAAA,mBAKuBN,WAAW,CAACO,OAAZ,CAAoB,iGAApB,CALvB;;AAAA;AAKQC,YAAAA,MALR;AAOE;AACMC,YAAAA,EARR,GAQaD,MAAM,CAACC,EAAP,EARb,EAUE;;AACMC,YAAAA,iBAXR,GAW4BD,EAAE,CAACE,UAAH,CAAc,SAAd,CAX5B,EAaE;;AAbF;AAAA,mBAcuBD,iBAAiB,CAACE,SAAlB,CAA4BP,IAA5B,CAdvB;;AAAA;AAcQQ,YAAAA,MAdR;AAeEC,YAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ,EAfF,CAiBE;;AACAL,YAAAA,MAAM,CAACQ,KAAP,GAlBF,CAoBE;;AACAb,YAAAA,GAAG,CAACc,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAACC,cAAAA,OAAO,EAAE;AAAV,aAArB;;AArBF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAyBA,eAAelB,OAAf","sourcesContent":["import {MongoClient} from 'mongodb'\n\nasync function handler(req, res) {\n\tif (req.method === 'POST') {\n\t\tconst data = req.body;\n\n\t\t// Chiamo Mongodb\n\t\tconst client = await MongoClient.connect('mongodb+srv://stefano:Rietto2019@cluster0.qf1ny.mongodb.net/meetups?retryWrites=true&w=majority')\n\n\t\t// Entro in possesso del database\n\t\tconst db = client.db()\n\n\t\t// Accedo alle mie collections\n\t\tconst meetupsCollection = db.collection('meetups')\n\n\t\t// Inserisco un nuovo documento alla collezione\n\t\tconst result = await meetupsCollection.insertOne(data)\n\t\tconsole.log(result);\n\n\t\t// Chiudo la connessione una volta finita e ritorno la risposta\n\t\tclient.close()\n\n\t\t// Metodo status che posso chiamare alla risposta per settare lo stato HTTP della risposta che ritornerò\n\t\tres.status(201).json({message: 'Meetup inserted!'});\n\t}\n}\n\nexport default handler;"]},"metadata":{},"sourceType":"module"}
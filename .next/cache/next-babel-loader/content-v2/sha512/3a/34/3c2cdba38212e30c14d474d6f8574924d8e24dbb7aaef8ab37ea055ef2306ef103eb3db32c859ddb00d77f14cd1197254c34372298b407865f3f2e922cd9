{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/stefanovolpatti/Web Development/react-complete-guide/22-NextJS/nextjs-project/pages/[meetupId]/index.js\";\nimport MeetupDetail from '../../components/meetups/MeetupDetail';\nimport { MongoClient, ObjectId } from 'mongodb';\nimport Head from 'next/head';\nimport { Fragment } from 'react';\n\nfunction MeetupDetails(props) {\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: props.meetupData.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"description\",\n        content: props.meetupData.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(MeetupDetail, {\n      image: props.meetupData.image,\n      title: props.meetupData.title,\n      address: props.meetupData.address,\n      description: props.meetupData.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 3\n  }, this);\n}\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect('mongodb+srv://stefano:Mongodb@cluster0.qf1ny.mongodb.net/meetups?retryWrites=true&w=majority'); // Entro in possesso del database\n\n  const db = client.db(); // Accedo alle mie collections\n\n  const meetupsCollection = db.collection('meetups'); // Get meetups data\n\n  const meetups = await meetupsCollection.find({}, {\n    _id: 1\n  }).toArray(); // Chiudo la connessione\n\n  client.close();\n  return {\n    fallback: false,\n    paths: meetups.map(meetup => ({\n      params: {\n        meetupId: meetup._id.toString()\n      }\n    }))\n  };\n}\nexport async function getStaticProps(context) {\n  // fetch data for a single meetup\n  const meetupId = context.params.meetupId;\n  const client = await MongoClient.connect('mongodb+srv://stefano:Mongodb@cluster0.qf1ny.mongodb.net/meetups?retryWrites=true&w=majority'); // Entro in possesso del database\n\n  const db = client.db(); // Accedo alle mie collections\n\n  const meetupsCollection = db.collection('meetups'); // Get a single meetupd\n\n  const selectedMeetup = await meetupsCollection.findOne({\n    _id: ObjectId(meetupId)\n  }); // Chiudo la connessione\n\n  client.close();\n  console.log(selectedMeetup);\n  return {\n    props: {\n      meetupData: {\n        id: selectedMeetup._id.toString(),\n        title: selectedMeetup.title,\n        address: selectedMeetup.address,\n        image: selectedMeetup.image,\n        description: selectedMeetup.description\n      }\n    }\n  };\n}\nexport default MeetupDetails;","map":{"version":3,"sources":["/Users/stefanovolpatti/Web Development/react-complete-guide/22-NextJS/nextjs-project/pages/[meetupId]/index.js"],"names":["MeetupDetail","MongoClient","ObjectId","Head","Fragment","MeetupDetails","props","meetupData","title","description","image","address","getStaticPaths","client","connect","db","meetupsCollection","collection","meetups","find","_id","toArray","close","fallback","paths","map","meetup","params","meetupId","toString","getStaticProps","context","selectedMeetup","findOne","console","log","id"],"mappings":";;AAAA,OAAOA,YAAP,MAAyB,uCAAzB;AACA,SAAQC,WAAR,EAAqBC,QAArB,QAAoC,SAApC;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAAQC,QAAR,QAAuB,OAAvB;;AAEA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC7B,sBACC,QAAC,QAAD;AAAA,4BACC,QAAC,IAAD;AAAA,8BACC;AAAA,kBAAQA,KAAK,CAACC,UAAN,CAAiBC;AAAzB;AAAA;AAAA;AAAA;AAAA,cADD,eAEC;AAAM,QAAA,IAAI,EAAC,aAAX;AAAyB,QAAA,OAAO,EAAEF,KAAK,CAACC,UAAN,CAAiBE;AAAnD;AAAA;AAAA;AAAA;AAAA,cAFD;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,eAKC,QAAC,YAAD;AACC,MAAA,KAAK,EAAEH,KAAK,CAACC,UAAN,CAAiBG,KADzB;AAEC,MAAA,KAAK,EAAEJ,KAAK,CAACC,UAAN,CAAiBC,KAFzB;AAGC,MAAA,OAAO,EAAEF,KAAK,CAACC,UAAN,CAAiBI,OAH3B;AAIC,MAAA,WAAW,EAAEL,KAAK,CAACC,UAAN,CAAiBE;AAJ/B;AAAA;AAAA;AAAA;AAAA,YALD;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAcA;;AAED,OAAO,eAAeG,cAAf,GAAgC;AAEtC,QAAMC,MAAM,GAAG,MAAMZ,WAAW,CAACa,OAAZ,CAAoB,8FAApB,CAArB,CAFsC,CAItC;;AACA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX,CALsC,CAOtC;;AACA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B,CARsC,CAUtC;;AACA,QAAMC,OAAO,GAAG,MAAMF,iBAAiB,CAACG,IAAlB,CAAuB,EAAvB,EAA2B;AAACC,IAAAA,GAAG,EAAE;AAAN,GAA3B,EAAqCC,OAArC,EAAtB,CAXsC,CAatC;;AACAR,EAAAA,MAAM,CAACS,KAAP;AAEA,SAAO;AACNC,IAAAA,QAAQ,EAAE,KADJ;AAENC,IAAAA,KAAK,EAAEN,OAAO,CAACO,GAAR,CAAYC,MAAM,KAAK;AAC5BC,MAAAA,MAAM,EAAE;AACPC,QAAAA,QAAQ,EAAEF,MAAM,CAACN,GAAP,CAAWS,QAAX;AADH;AADoB,KAAL,CAAlB;AAFD,GAAP;AAUA;AAED,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAuC;AAC7C;AAEA,QAAMH,QAAQ,GAAGG,OAAO,CAACJ,MAAR,CAAeC,QAAhC;AAEA,QAAMf,MAAM,GAAG,MAAMZ,WAAW,CAACa,OAAZ,CAAoB,8FAApB,CAArB,CAL6C,CAO7C;;AACA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX,CAR6C,CAU7C;;AACA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B,CAX6C,CAa7C;;AACA,QAAMe,cAAc,GAAG,MAAMhB,iBAAiB,CAACiB,OAAlB,CAA0B;AAACb,IAAAA,GAAG,EAAElB,QAAQ,CAAC0B,QAAD;AAAd,GAA1B,CAA7B,CAd6C,CAgB7C;;AACAf,EAAAA,MAAM,CAACS,KAAP;AAEAY,EAAAA,OAAO,CAACC,GAAR,CAAYH,cAAZ;AAEA,SAAO;AACN1B,IAAAA,KAAK,EAAE;AACNC,MAAAA,UAAU,EAAE;AACX6B,QAAAA,EAAE,EAAEJ,cAAc,CAACZ,GAAf,CAAmBS,QAAnB,EADO;AAEXrB,QAAAA,KAAK,EAAEwB,cAAc,CAACxB,KAFX;AAGXG,QAAAA,OAAO,EAAEqB,cAAc,CAACrB,OAHb;AAIXD,QAAAA,KAAK,EAAEsB,cAAc,CAACtB,KAJX;AAKXD,QAAAA,WAAW,EAAEuB,cAAc,CAACvB;AALjB;AADN;AADD,GAAP;AAWA;AAED,eAAeJ,aAAf","sourcesContent":["import MeetupDetail from '../../components/meetups/MeetupDetail';\nimport {MongoClient, ObjectId} from 'mongodb';\nimport Head from 'next/head';\nimport {Fragment} from 'react';\n\nfunction MeetupDetails(props) {\n\treturn (\n\t\t<Fragment>\n\t\t\t<Head>\n\t\t\t\t<title>{props.meetupData.title}</title>\n\t\t\t\t<meta name=\"description\" content={props.meetupData.description}/>\n\t\t\t</Head>\n\t\t\t<MeetupDetail\n\t\t\t\timage={props.meetupData.image}\n\t\t\t\ttitle={props.meetupData.title}\n\t\t\t\taddress={props.meetupData.address}\n\t\t\t\tdescription={props.meetupData.description}\n\t\t\t/>\n\t\t</Fragment>\n\t);\n}\n\nexport async function getStaticPaths() {\n\n\tconst client = await MongoClient.connect('mongodb+srv://stefano:Mongodb@cluster0.qf1ny.mongodb.net/meetups?retryWrites=true&w=majority')\n\n\t// Entro in possesso del database\n\tconst db = client.db()\n\n\t// Accedo alle mie collections\n\tconst meetupsCollection = db.collection('meetups')\n\n\t// Get meetups data\n\tconst meetups = await meetupsCollection.find({}, {_id: 1}).toArray()\n\n\t// Chiudo la connessione\n\tclient.close()\n\n\treturn {\n\t\tfallback: false,\n\t\tpaths: meetups.map(meetup => ({\n\t\t\t\tparams: {\n\t\t\t\t\tmeetupId: meetup._id.toString(),\n\t\t\t\t},\n\t\t\t}),\n\t\t),\n\n\t};\n}\n\nexport async function getStaticProps(context) {\n\t// fetch data for a single meetup\n\n\tconst meetupId = context.params.meetupId;\n\n\tconst client = await MongoClient.connect('mongodb+srv://stefano:Mongodb@cluster0.qf1ny.mongodb.net/meetups?retryWrites=true&w=majority')\n\n\t// Entro in possesso del database\n\tconst db = client.db()\n\n\t// Accedo alle mie collections\n\tconst meetupsCollection = db.collection('meetups')\n\n\t// Get a single meetupd\n\tconst selectedMeetup = await meetupsCollection.findOne({_id: ObjectId(meetupId)})\n\n\t// Chiudo la connessione\n\tclient.close()\n\n\tconsole.log(selectedMeetup);\n\n\treturn {\n\t\tprops: {\n\t\t\tmeetupData: {\n\t\t\t\tid: selectedMeetup._id.toString(),\n\t\t\t\ttitle: selectedMeetup.title,\n\t\t\t\taddress: selectedMeetup.address,\n\t\t\t\timage: selectedMeetup.image,\n\t\t\t\tdescription: selectedMeetup.description,\n\t\t\t},\n\t\t},\n\t};\n}\n\nexport default MeetupDetails;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/stefanovolpatti/Web Development/react-complete-guide/22-NextJS/nextjs-project/pages/[meetupId]/index.js\";\nimport MeetupDetail from '../../components/meetups/MeetupDetail';\n\nfunction MeetupDetails() {\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    image: \"https://upload.wikimedia.org/wikipedia/commons/thumb/d/d3/Stadtbild_M%C3%BCnchen.jpg/1280px-Stadtbild_M%C3%BCnchen.jpg\",\n    title: \"First Meetup\",\n    address: \"Some Street 5, Some City\",\n    description: \"This is a first meetup\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 3\n  }, this);\n}\n\n_c = MeetupDetails;\nexport var __N_SSG = true;\nexport default MeetupDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"MeetupDetails\");","map":{"version":3,"sources":["/Users/stefanovolpatti/Web Development/react-complete-guide/22-NextJS/nextjs-project/pages/[meetupId]/index.js"],"names":["MeetupDetail","MeetupDetails"],"mappings":";;AAAA,OAAOA,YAAP,MAAyB,uCAAzB;;AAGA,SAASC,aAAT,GAAyB;AACxB,sBACC,QAAC,YAAD;AACC,IAAA,KAAK,EAAC,wHADP;AAEC,IAAA,KAAK,EAAC,cAFP;AAGC,IAAA,OAAO,EAAC,0BAHT;AAIC,IAAA,WAAW,EAAC;AAJb;AAAA;AAAA;AAAA;AAAA,UADD;AAQA;;KATQA,a;;AAmET,eAAeA,aAAf","sourcesContent":["import MeetupDetail from '../../components/meetups/MeetupDetail';\nimport {MongoClient} from 'mongodb';\n\nfunction MeetupDetails() {\n\treturn (\n\t\t<MeetupDetail\n\t\t\timage=\"https://upload.wikimedia.org/wikipedia/commons/thumb/d/d3/Stadtbild_M%C3%BCnchen.jpg/1280px-Stadtbild_M%C3%BCnchen.jpg\"\n\t\t\ttitle=\"First Meetup\"\n\t\t\taddress=\"Some Street 5, Some City\"\n\t\t\tdescription=\"This is a first meetup\"\n\t\t/>\n\t);\n}\n\nexport async function getStaticPaths() {\n\n\tconst client = await MongoClient.connect('mongodb+srv://stefano:Mongodb@cluster0.qf1ny.mongodb.net/meetups?retryWrites=true&w=majority')\n\n\t// Entro in possesso del database\n\tconst db = client.db()\n\n\t// Accedo alle mie collections\n\tconst meetupsCollection = db.collection('meetups')\n\n\t// Get meetups data\n\tconst meetups = await meetupsCollection.find({}, {_id: 1}).toArray()\n\n\t// Chiudo la connessione\n\tclient.close()\n\n\treturn {\n\t\tfallback: false,\n\t\tpaths: meetups.map(meetup => ({\n\t\t\t\tparams: {\n\t\t\t\t\tmeetupId: meetup._id.toString(),\n\t\t\t\t},\n\t\t\t}),\n\t\t),\n\n\t};\n}\n\nexport async function getStaticProps(context) {\n\t// fetch data for a single meetup\n\n\tconst meetupId = context.params.meetupId;\n\n\tconst client = await MongoClient.connect('mongodb+srv://stefano:Mongodb@cluster0.qf1ny.mongodb.net/meetups?retryWrites=true&w=majority')\n\n\t// Entro in possesso del database\n\tconst db = client.db()\n\n\t// Accedo alle mie collections\n\tconst meetupsCollection = db.collection('meetups')\n\n\t// Get a single meetupd\n\tconst selectedMeetup = await meetupsCollection.findOne({_id: meetupId})\n\n\t// Chiudo la connessione\n\tclient.close()\n\n\tconsole.log(meetupId);\n\n\treturn {\n\t\tprops: {\n\t\t\tmeetupData: selectedMeetup,\n\t\t},\n\t};\n}\n\nexport default MeetupDetails;"]},"metadata":{},"sourceType":"module"}